一、介绍
1、了解box2d的基础知识
	box2d是一个强大开源的物理游戏引擎，被运用于广大的2D游戏中。box2d中集成了很多物理学、力学的计算，在游戏中模拟真实世界的物理效果，比如自由落体、加速等。box2d是c++编写的。在引擎中大部分的类都有b2的前缀。我们使用box2d其实只要获取他运算的结果，并加以运用到游戏里面的对象上

2、核心概念
	单位: k m s
	box2d中有的基本的对象：

	刚体
	1、创建刚体定义
	2、通过物理世界创建刚体，这时的刚体是没有形的，只是一个数据
	3、为刚体创建一个夹具，并设置形状，摩擦力、密度和恢复等等属性
	4、一个刚体可以创建多个不同的夹具


	
	形状（shape）
	包裹物体（body）的2d碰撞几何结构。形状具有摩擦和恢复的材料性质

	

	夹具
	一个固定装置将一个形状捆绑到一个body上面，并添加材料属性，例如密度，摩擦力和恢复

	约束
	约束就是一个物理连接，目的是消除body的自由度。在2d中，body中一共有三个自由度,比如汽车在一维的空间上只能做前进后退的移动，这时我们就说
	汽车此时只有一个自由度，转到二维平面后，汽车可以上下左右移动了，我们就说这辆有两个自由度了，如果想让车在屏幕上拐弯的话，就需要在车身上加入第三个
	自由度-旋转，这就是三个自由度


 	触点约束
 	一个特殊的约束，目的在于防止侵入刚体，模拟摩擦，恢复。你不能创造接触约束。他们是box2d自动形成的

 	关节
 	这是一个用来将两个或更多的body连接在一起的约束。box2d支持多种类型的关节：旋转，
 	棱柱，距离等。关节也可以支持限制和马达。

 	关节限制
 	一个关节限制限制了一个关节的运动范围。例如，人物手肘只能确定范围的移动。

 	关节马达
 	一个关节马达能依照关节的自由度来驱动所连接的物体。例如，你可以使用一个马达来驱动一个手肘的旋转

	一般情况下不会在两个动态物体之间使用持续碰撞检测(CCD)这么做的原因是为了保持效率。但是在一些游戏场景中你需要在动态物体之间使用持续碰撞检测(CCD)例如，你想用子弹高速射击一摞动态类型的砖头。如果不使用持续碰撞检测(CCD)，那么子弹会产生隧道效应(tunnel)从而穿越砖头。
	Box2D中快速移动的物体可以被看做子弹。子弹跟静态与动态物体之间的碰撞需要使用持续碰撞检测(CCD)在你的游戏设计中，你需要判断哪些物体可以看做子弹。如果你决定了哪个物体像子弹一样对待